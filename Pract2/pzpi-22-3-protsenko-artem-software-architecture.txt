Харківський національний університет радіоелектроніки
Факультет комп'ютерних наук
Кафедра програмної інженерії




ЗВІТ
до практичного заняття №2 з дисципліни
«Архітектура програмного забезпечення»
на тему: «Архітектура відомих програмних систем»






Виконав
ст. гр. ПЗПІ-22-3
Проценко Артем Романович

Перевірив
ст. викладач кафедри ПІ
Сокорчук Ігор Петрович





Харків 2025
ІСТОРІЯ ЗМІН

№	Дата			Версія звіту	Опис змін та виправлень
1	10.04.2025		0.1			Додано розділ завдання, опис виконаної роботи.
2	11.04.2025		0.1			Сформульовано висновки роботи
3	12.04.2025		0.1			Наведено слайди презентації в додатку Б. Наведено приклади програмного коду в додатку В.
4	13.04.2025		0.1			Створено відеозапис доповіді та наведено в додатку А.

1 ЗАВДАННЯ

Завдання на дане практичне заняття є дослідження та аналіз архітектури програмної системи Discord.

	2 ОПИС ВИКОНАНОЇ РОБОТИ

У процесі виконання практичного завдання було здійснено комплексний аналіз архітектури програмної системи Discord як сучасної масштабованої платформи для комунікації в режимі реального часу. В межах підготовки доповіді було досліджено як зовнішні, так і внутрішні аспекти архітектури: від клієнтської взаємодії з API до організації мікросервісного середовища, роботи системи зберігання даних і принципів комунікації між компонентами через WebSocket. На основі проведеного аналізу було підготовлено повноцінну тематичну презентацію, яка узагальнює результати, а також візуалізує ключові архітектурні рішення платформи Discord. Посилання на запис доповіді, завантажений на відеохостинг YouTube та скріншоти презентації наведено у додатку А та Б відповідно.
Особлива увага приділялась тому, як Discord реалізує обробку повідомлень у реальному часі, підтримує голосову та відео комунікацію, а також забезпечує надійне масштабування через механізм шардінгу. Аналіз показав, що архітектура побудована за принципами хмарної децентралізованої інфраструктури з використанням мікросервісного підходу, що дозволяє масштабувати окремі сервіси незалежно один від одного та досягати високої відмовостійкості. Визначено, що Discord використовує складний стек технологій, серед яких присутні сучасні інструменти для клієнтської частини, серверної частини, обробки медіа-трафіку, систем кешування, а також бази даних, адаптовані до різних типів навантаження. У дослідженні також було зроблено акцент на функціональних особливостях платформи, таких як підтримка ботів, інтеграцій, Rich Presence, що забезпечує широкі можливості для користувацького та програмного розширення системи.
У підсумку, в доповіді зроблено висновки щодо ефективності використаних технічних рішень, зокрема щодо того, як архітектура Discord дозволяє досягати високої масштабованості, адаптивності та стабільності у змінних умовах навантаження. Розглянуто перспективи подальшого розвитку платформи, пов’язані із впровадженням штучного інтелекту, удосконаленням інструментів спільної роботи та покращенням якості комунікаційних сервісів. 
 
ВИСНОВКИ

У результаті виконання поставленого завдання було успішно здійснено дослідження та аналіз архітектури програмної системи Discord. Розглянуто її основні структурні компоненти, принципи взаємодії між сервісами, технологічний стек і підходи до масштабування. Отримані результати дозволили глибше зрозуміти, яким чином забезпечується стабільна та ефективна робота платформи в умовах високого навантаження й інтенсивного обміну даними в реальному часі.
 
ДОДАТОК А
Посилання на відеозапис доповіді

Відеозапис доповіді на YouTube: https://youtu.be/VphPY0rUhZ8

Нижче наведено хронологічний опис доповіді.

00:00 – Привітання. Коротке вітальне слово, представлення теми та цілей доповіді.
00:10 – Зміст доповіді. Ознайомлення з основними розділами презентації, які послідовно розкривають архітектуру Discord.
00:34 – Вступ. Визначення, що таке Discord, його загальні характеристики як програмної платформи для комунікації.
01:07 – Основне призначення системи для користувачів. Пояснення, які функції Discord виконує для кінцевих користувачів, зокрема спілкування, створення серверів, інтеграції.
02:02 – Загальна архітектура системи. Огляд основної архітектурної моделі Discord, показано взаємозв’язки між клієнтами, API, мікросервісами, базами даних та медіа-компонентами.
03:52 – Технологічний стек. Розгляд основних технологій, що лежать в основі Discord, включаючи мови програмування, бази даних, фреймворки та інші інструменти.
05:00 – Система зберігання даних. Аналіз способів зберігання інформації в Discord: робота з базами даних, кешування та розподіл даних за типами.
07:11 – Обробка повідомлень у реальному часі. Опис того, як система забезпечує миттєвий обмін повідомленнями за допомогою WebSocket і координацію в реальному часі.
08:11 – Особливості голосової та відео комунікації. Висвітлено, як працює голосовий та відеозв’язок, якими є технічні особливості медіа-серверів і протоколів.
09:20 – Шардінг та масштабування системи. Пояснено принцип шардінгу, розподіл навантаження між вузлами, забезпечення стабільності й розширюваності системи.
10:32 – Цікаві функціональні рішення. Коротко розглянуто підтримку ботів, Rich Presence, інтеграції з іншими платформами.
11:21 – Перспективи розвитку системи. Описано основні напрямки еволюції Discord: впровадження ШІ, покращення відео та спільної роботи, розвиток архітектури.
12:02 – Висновки. Підсумовано результати аналізу, відзначено ефективність архітектурних рішень і перспективність системи.
 
ДОДАТОК Б
Слайди презентації доповіді

 
Рисунок Б.1 – Титульний слайд

 
Рисунок Б.2 – Зміст доповіді

 
Рисунок Б.3 – Вступ

 
Рисунок Б.4 – Основне призначення системи для користувачів

 
Рисунок Б.5 – Загальна архітектура платформи

 
Рисунок Б.6 – Технологічний стек системи

 
Рисунок Б.7 – Система зберігання даних

 
Рисунок Б.8 – Обробка повідомлень у реальному часі

 
Рисунок Б.9 – Особливості голосової та відео комунікації

 
Рисунок Б.10 – Шардінг та масштабування системи

 
Рисунок Б.11 – Цікаві функціональні рішення

 
Рисунок Б.12 – Перспективи розвитку системи

 
Рисунок Б.13 – Висновки

